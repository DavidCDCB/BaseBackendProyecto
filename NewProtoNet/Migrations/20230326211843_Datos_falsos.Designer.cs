// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestServer.Data;

#nullable disable

namespace RestServer.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    [Migration("20230326211843_Datos_falsos")]
    partial class Datos_falsos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CourseUser", b =>
                {
                    b.Property<int>("CoursesId")
                        .HasColumnType("int");

                    b.Property<int>("usersId")
                        .HasColumnType("int");

                    b.HasKey("CoursesId", "usersId");

                    b.HasIndex("usersId");

                    b.ToTable("UserCourses", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Domain.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("Phone")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Antonio.Aguilera93@gmail.com",
                            FullName = "Antonio Aguilera",
                            Phone = 7603L
                        },
                        new
                        {
                            Id = 2,
                            Email = "Carmen.Kanaria@yahoo.com",
                            FullName = "Carmen Kanaria",
                            Phone = 2625L
                        },
                        new
                        {
                            Id = 3,
                            Email = "Gregorio84@nearbpo.com",
                            FullName = "Gregorio Aponte",
                            Phone = 8483L
                        },
                        new
                        {
                            Id = 4,
                            Email = "XimenaGuadalupe.Garay4@hotmail.com",
                            FullName = "Ximena Guadalupe Garay",
                            Phone = 5013L
                        },
                        new
                        {
                            Id = 5,
                            Email = "Esteban.Altamirano@gmail.com",
                            FullName = "Esteban Altamirano",
                            Phone = 1826L
                        },
                        new
                        {
                            Id = 6,
                            Email = "Santiago49@nearbpo.com",
                            FullName = "Santiago Murillo",
                            Phone = 9930L
                        },
                        new
                        {
                            Id = 7,
                            Email = "Rosario_Cerda@hotmail.com",
                            FullName = "Rosario Cerda",
                            Phone = 4154L
                        },
                        new
                        {
                            Id = 8,
                            Email = "Raquel45@hotmail.com",
                            FullName = "Raquel Lugo",
                            Phone = 3740L
                        },
                        new
                        {
                            Id = 9,
                            Email = "Gonzalo.Vera8@corpfolder.com",
                            FullName = "Gonzalo Vera",
                            Phone = 4013L
                        },
                        new
                        {
                            Id = 10,
                            Email = "DulceMaria39@gmail.com",
                            FullName = "Dulce María Canales",
                            Phone = 8561L
                        });
                });

            modelBuilder.Entity("CourseUser", b =>
                {
                    b.HasOne("Domain.Entities.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("usersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Course", b =>
                {
                    b.HasOne("Domain.Entities.Category", "Category")
                        .WithMany("Course")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Navigation("Course");
                });
#pragma warning restore 612, 618
        }
    }
}
